from typing import Any, List, Optional, Union, Dict

def createNode(nodeType: str) -> Any: ...
def nodes() -> Any: ...
def selectedNode() -> Any: ...
def allNodes() -> List[Any]: ...
def toNode(nodeName: str) -> Any: ...
def delete(node: Any) -> None: ...

class Node:
    def __init__(self) -> None: ...
    def setInput(self, inputNumber: int, node: Any) -> None: ...
    def setXpos(self, x: int) -> None: ...
    def setYpos(self, y: int) -> None: ...
    def xpos(self) -> int: ...
    def ypos(self) -> int: ...
    def screenWidth(self) -> int: ...
    def screenHeight(self) -> int: ...
    def inputs(self) -> int: ...
    def input(self, inputNumber: int) -> Any: ...
    def dependencies(self, which: int) -> List[Any]: ...
    def name(self) -> str: ...
    def Class(self) -> str: ...
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...

# Constantes
INPUTS = 0
OUTPUTS = 1
HIDDEN_INPUTS = 2
HIDDEN_OUTPUTS = 3 