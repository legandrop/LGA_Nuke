import sys
import os
import importlib

# Variable global para activar o desactivar los prints de depuración
DEBUG = False

def debug_print(*message):
    if DEBUG:
        print(*message)

# Definir la ruta del script que quieres ejecutar
ScriptPath = "Python/Startup/LGA_NKS/LGA_NKS_Clip_DisableEXR.py"

def obtener_plugin_path(script_path):
    """
    Determina la ruta del plugin dependiendo si es Hiero o Nuke.
    - En Hiero: usa hiero.core.pluginPath()
    - En Nuke: usa la ruta del script
    """
    try:
        import hiero.core
        # Intentar obtener la ruta de plugins de Hiero
        hiero_plugin_paths = hiero.core.pluginPath()
        if isinstance(hiero_plugin_paths, (tuple, list)) and len(hiero_plugin_paths) > 0:
            return hiero_plugin_paths[0]
        return hiero_plugin_paths
    except (ImportError, NotImplementedError):
        # Si no estamos en Hiero o pluginPath no está disponible, usar la ruta del script
        return os.path.dirname(os.path.abspath(script_path))

def ejecutar_script(script_path):
    plugin_path = obtener_plugin_path(script_path)
    
    # Construir la ruta al directorio que contiene nuestro script
    script_dir = os.path.join(plugin_path, os.path.dirname(script_path))
    
    # Normalizar la ruta
    script_dir = os.path.normpath(script_dir)
    
    # Añadir el directorio al path de Python si no está ya
    if script_dir not in sys.path:
        sys.path.insert(0, script_dir)
    
    debug_print("Python path:", sys.path)
    debug_print("Script directory:", script_dir)
    debug_print("")
    
    # Obtener el nombre del módulo del script
    module_name = os.path.splitext(os.path.basename(script_path))[0]
    
    try:
        # Importar el módulo
        debug_print(f"Intentando importar el módulo: {module_name}")
        module = importlib.import_module(module_name)
        
        # Recargar el módulo
        debug_print(f"Recargando el módulo: {module_name}")
        module = importlib.reload(module)
        
        debug_print(f"Módulo importado y recargado: {module}")
        
        # Si el módulo tiene una función main(), ejecutarla
        if hasattr(module, 'main') and callable(module.main):
            debug_print("Función main() encontrada. Ejecutando...")
            module.main()
        else:
            debug_print(f"El módulo {module_name} no tiene una función main() ejecutable.")
            debug_print("Contenido del módulo:")
            for attr in dir(module):
                debug_print(f"  {attr}")
    except Exception as e:
        debug_print(f"Error al importar o ejecutar el módulo: {e}")
        import traceback
        traceback.print_exc()
        
        debug_print(f"Asegúrate de que el archivo {os.path.basename(script_path)} está en {script_dir}")
        
        # Listar los contenidos del directorio para depuración
        debug_print("Contenidos del directorio:")
        try:
            for root, dirs, files in os.walk(script_dir):
                for file in files:
                    debug_print(os.path.join(root, file))
        except Exception as walk_error:
            debug_print(f"Error al listar el directorio: {walk_error}")

# Ejecutar el script
ejecutar_script(ScriptPath)
