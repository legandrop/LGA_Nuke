version 13.1 v1
Gizmo {
 onCreate "import sys\nthis = nuke.thisNode()\ninference = nuke.toNode(f\"\{this.name()\}.Inference1\")\nthis[\"gpuName\"].setValue(inference[\"gpuName\"].value())\nthis[\"channelsIn\"].setValue(\"rgba.red, rgba.green, rgba.blue\")\ninference.forceValidate()\nis_enabled = inference\[\"modelFile\"\].enabled()\nif (sys.platform.lower() == \"darwin\") and (not inference\[\"useGPUIfAvailable\"\].enabled()): this\[\"useGPUIfAvailable\"\].setValue(False), this\[\"useGPUIfAvailable\"\].setEnabled(False)\nif not is_enabled:\n    for k in this.knobs(): this[k].setEnabled(False)\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].enabled())"
 knobChanged "this = nuke.thisNode()\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].value())"
 onDestroy "nuke.thisNode()\[\"knobChanged\"].setValue(\"\")"
 addUserKnob {20 ABME_Retime}
 addUserKnob {26 localGPU l "Local GPU:" T ""}
 addUserKnob {26 gpuName l "" -STARTLINE T "NVIDIA RTX A5000"}
 addUserKnob {6 useGPUIfAvailable l "Use GPU if available" t "Select this to render on the <b>Local GPU</b>, if available.\n\nYou can select this even if no GPU is currently available on your machine. The GPU will then be used whenever the script is opened on a machine which does have a GPU available. You should also select this if you wish to render from the command line with the <b>--gpu</b> option.\n\nIf this node requires full frames from its inputs, and is therefore unable to reduce its memory overhead, it will fall back to the CPU if an attempt to render a frame on the GPU fails due to lack of memory. When this occurs, a warning message will be printed to the console." +STARTLINE}
 useGPUIfAvailable true
 addUserKnob {26 ""}
 addUserKnob {26 channelsIn l "Channels In:" t "The channels the model expects as input." T "rgba.red, rgba.green, rgba.blue"}
 addUserKnob {41 in_colorspace l "Input Colorspace" t "Define the colorspace that the input image is in." T OCIOColorSpace1.in_colorspace}
 addUserKnob {6 halfPrecision l "Optimize for Speed and Memory" t "Whether to process at half float precision. This speeds up execution and enables the processing of larger images, however there is the risk of artifacts with some trained models." +STARTLINE}
}
 Input {
  inputs 0
  name Input1
  xpos 829
  ypos -246
 }
 OCIOColorSpace {
  in_colorspace scene_linear
  out_colorspace color_picking
  name OCIOColorSpace1
  knobChanged "nuke.toNode(\"OCIOColorSpace2\")\[\"out_colorspace\"].setValue(nuke.thisNode()\[\"in_colorspace\"].value())"
  xpos 829
  ypos -180
 }
set Nea0bdf0 [stack 0]
 FrameHold {
  firstFrame {{"Input1.first_frame + 1 + floor((frame- Input1.first_frame)/2)"}}
  name FrameHold4
  xpos 1136
  ypos -32
 }
push $Nea0bdf0
 FrameHold {
  firstFrame {{"(Input1.first_frame) + floor((frame -Input1.first_frame) /2) "}}
  name FrameHold3
  xpos 981
  ypos -33
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  from1 rgba.green
  to1 forward.u
  from2 rgba.blue
  to2 forward.v
  name Copy2
  xpos 1071
  ypos 29
 }
 Inference {
  useGPUIfAvailable {{parent.useGPUIfAvailable}}
  modelFile "\[lsearch -inline \[plugins -all MENet.cat] *.cat]"
  halfPrecision {{parent.halfPrecision}}
  serialiseKnob {}
  name Inference1
  xpos 1071
  ypos 113
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos 1071
  ypos 188
 }
push $Nea0bdf0
 FrameHold {
  firstFrame {{"Input1.first_frame + floor((frame - Input1.first_frame)/2)"}}
  name FrameHold1
  xpos 715
  ypos -28
 }
 Switch {
  inputs 2
  which {{"((frame - Input1.first_frame)%2)" x188 0}}
  name Switch1
  xpos 834
  ypos 386
 }
push $Nea0bdf0
 Switch {
  inputs 2
  which {{"(Input1.frame <= (Input1.first_frame + (Input1.last_frame - Input1.first_frame)*2)) && (Input1.frame >= (Input1.first_frame)) "}}
  name Switch2
  xpos 728
  ypos 442
 }
 FrameRange {
  first_frame {{Input1.first_frame}}
  last_frame {{"Input1.first_frame + (Input1.last_frame - Input1.first_frame)*2"}}
  time ""
  name FrameRange2
  xpos 834
  ypos 509
 }
 OCIOColorSpace {
  in_colorspace color_picking
  out_colorspace scene_linear
  name OCIOColorSpace2
  xpos 834
  ypos 557
 }
 Output {
  name Output1
  selected true
  xpos 834
  ypos 602
 }
end_group
